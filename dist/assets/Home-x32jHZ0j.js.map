{"version":3,"file":"Home-x32jHZ0j.js","sources":["../../src/pages/Home.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocale } from '../hooks/useLocale';\nimport { useCookieState } from '../hooks/useCookieState';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport styles from './Home.module.css';\n\nexport default function Portfolio() {\n  const { t } = useTranslation();\n  const [locale, setLocale] = useLocale();\n  const [isDarkMode, setIsDarkMode] = useCookieState<boolean>(\n    'darkMode',\n    false\n  );\n\n  // Update theme attribute on document element\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.setAttribute('data-theme', 'dark');\n    } else {\n      document.documentElement.removeAttribute('data-theme');\n    }\n  }, [isDarkMode]);\n\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  return (\n    <>\n      <Header\n        showDarkModeToggle={true}\n        isDarkMode={isDarkMode}\n        onDarkModeToggle={toggleDarkMode}\n        locale={locale}\n        showBackLink={false}\n      />\n      <main>\n        <div className={styles.container}>\n          <div className=\"markdown\">\n            <div className={styles.introSection}>\n              <img\n                src=\"/profile.jpeg\"\n                width=\"500\"\n                height=\"700\"\n                alt=\"kd holding some freshly acquired baguettes in Dublin\"\n                className={styles.profileImage}\n              />\n            </div>\n            <h1 className=\"title\">{t('homeTitle')}</h1>\n            <div>\n              <p className={styles.intro}>{t('homeIntro')}</p>\n              <p className={styles.fridgeLink}>\n                <a href=\"/fridge\">{t('homeFridgeLink')}</a>\n              </p>\n              <div className={styles.section}>\n                <h2>{t('homeDeveloperJourneyTitle')}</h2>\n                <p>{t('homeDeveloperJourneyText')}</p>\n\n                <pre className={styles.codeBlock}>\n                  <code>\n                    {`// The Developer's Infinite Loop\nasync function developerLife() {\n  try {\n    while (true) {\n      // Phase 1: Problem Discovery\n      const problems = await identifyBugs();\n      const features = await gatherRequirements();\n\n      // Phase 2: Fuel Acquisition\n      const fuel = await getCaffeine();\n      if (fuel < 50) {\n        await drink(coffee || energyDrink);\n      }\n\n      // Phase 3: The Magic Happens\n      await writeCode(problems, features);\n      await refactorForReadability();\n      await addComprehensiveTests();\n\n      // Phase 4: Quality Assurance\n      const testsPass = await runTestSuite();\n      if (!testsPass) {\n        console.log(\"ðŸ”§ Fixing bugs...\");\n        continue; // Back to coding!\n      }\n\n      // Phase 5: Deployment & Celebration\n      await deployToProduction();\n      await celebrateSuccess();\n\n      // Phase 6: Reflection & Growth\n      await learnFromExperience();\n      await planNextIteration();\n\n      // Brief pause before the next cycle\n      await sleep(8 * 60 * 60 * 1000); // 8 hours in ms\n    }\n  } catch (error) {\n    if (error.name === 'BurnoutError') {\n      await takeBreak();\n      await rechargeBatteries();\n    } else {\n      console.error('Unexpected error:', error);\n      await debugAndFix(error);\n    }\n    return developerLife(); // Recursion saves the day!\n  }\n}\n\n// Start the endless cycle\ndeveloperLife();`}\n                  </code>\n                </pre>\n              </div>\n\n              <div className={styles.section}>\n                <h2>{t('homeLifeBeyondCodeTitle')}</h2>\n                <p>{t('homeLifeBeyondCodeText')}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n      <Footer locale={locale} onLocaleChange={setLocale} />\n    </>\n  );\n}\n"],"names":["Portfolio","t","useTranslation","locale","setLocale","useLocale","isDarkMode","setIsDarkMode","useCookieState","useEffect","toggleDarkMode","jsxs","Fragment","jsx","Header","styles","Footer"],"mappings":"kYAQA,SAAwBA,GAAY,CAClC,KAAM,CAAE,EAAAC,CAAA,EAAMC,EAAA,EACR,CAACC,EAAQC,CAAS,EAAIC,EAAA,EACtB,CAACC,EAAYC,CAAa,EAAIC,EAClC,WACA,EAAA,EAIFC,EAAAA,UAAU,IAAM,CACVH,EACF,SAAS,gBAAgB,aAAa,aAAc,MAAM,EAE1D,SAAS,gBAAgB,gBAAgB,YAAY,CAEzD,EAAG,CAACA,CAAU,CAAC,EAEf,MAAMI,EAAiB,IAAM,CAC3BH,EAAc,CAACD,CAAU,CAC3B,EAEA,OACEK,EAAAA,KAAAC,WAAA,CACE,SAAA,CAAAC,EAAAA,IAACC,EAAA,CACC,mBAAoB,GACpB,WAAAR,EACA,iBAAkBI,EAClB,OAAAP,EACA,aAAc,EAAA,CAAA,EAEhBU,EAAAA,IAAC,OAAA,CACC,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAWE,EAAO,UACrB,SAAAJ,EAAAA,KAAC,MAAA,CAAI,UAAU,WACb,SAAA,CAAAE,EAAAA,IAAC,MAAA,CAAI,UAAWE,EAAO,aACrB,SAAAF,EAAAA,IAAC,MAAA,CACC,IAAI,gBACJ,MAAM,MACN,OAAO,MACP,IAAI,uDACJ,UAAWE,EAAO,YAAA,CAAA,EAEtB,QACC,KAAA,CAAG,UAAU,QAAS,SAAAd,EAAE,WAAW,EAAE,SACrC,MAAA,CACC,SAAA,CAAAY,MAAC,KAAE,UAAWE,EAAO,MAAQ,SAAAd,EAAE,WAAW,EAAE,EAC5CY,EAAAA,IAAC,IAAA,CAAE,UAAWE,EAAO,WACnB,SAAAF,EAAAA,IAAC,IAAA,CAAE,KAAK,UAAW,SAAAZ,EAAE,gBAAgB,CAAA,CAAE,EACzC,EACAU,EAAAA,KAAC,MAAA,CAAI,UAAWI,EAAO,QACrB,SAAA,CAAAF,EAAAA,IAAC,KAAA,CAAI,SAAAZ,EAAE,2BAA2B,CAAA,CAAE,EACpCY,EAAAA,IAAC,IAAA,CAAG,SAAAZ,EAAE,0BAA0B,CAAA,CAAE,QAEjC,MAAA,CAAI,UAAWc,EAAO,UACrB,eAAC,OAAA,CACE,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAA,CAmDH,CAAA,CACF,CAAA,EACF,EAEAJ,EAAAA,KAAC,MAAA,CAAI,UAAWI,EAAO,QACrB,SAAA,CAAAF,EAAAA,IAAC,KAAA,CAAI,SAAAZ,EAAE,yBAAyB,CAAA,CAAE,EAClCY,EAAAA,IAAC,IAAA,CAAG,SAAAZ,EAAE,wBAAwB,CAAA,CAAE,CAAA,CAAA,CAClC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EACF,EACF,EACAY,EAAAA,IAACG,EAAA,CAAO,OAAAb,EAAgB,eAAgBC,CAAA,CAAW,CAAA,EACrD,CAEJ"}