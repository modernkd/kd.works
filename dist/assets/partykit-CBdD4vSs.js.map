{"version":3,"file":"partykit-CBdD4vSs.js","sources":["../../node_modules/partysocket/dist/chunk-ZCZZNAX5.mjs","../../node_modules/partysocket/dist/chunk-NLWAO4PP.mjs"],"sourcesContent":["// src/ws.ts\nif (!globalThis.EventTarget || !globalThis.Event) {\n  console.error(`\n  PartySocket requires a global 'EventTarget' class to be available!\n  You can polyfill this global by adding this to your code before any partysocket imports: \n  \n  \\`\\`\\`\n  import 'partysocket/event-target-polyfill';\n  \\`\\`\\`\n  Please file an issue at https://github.com/partykit/partykit if you're still having trouble.\n`);\n}\nvar ErrorEvent = class extends Event {\n  message;\n  error;\n  // biome-ignore lint/suspicious/noExplicitAny: vibes\n  constructor(error, target) {\n    super(\"error\", target);\n    this.message = error.message;\n    this.error = error;\n  }\n};\nvar CloseEvent = class extends Event {\n  code;\n  reason;\n  wasClean = true;\n  // biome-ignore lint/style/useDefaultParameterLast: legacy\n  // biome-ignore lint/suspicious/noExplicitAny: legacy\n  constructor(code = 1e3, reason = \"\", target) {\n    super(\"close\", target);\n    this.code = code;\n    this.reason = reason;\n  }\n};\nvar Events = {\n  Event,\n  ErrorEvent,\n  CloseEvent\n};\nfunction assert(condition, msg) {\n  if (!condition) {\n    throw new Error(msg);\n  }\n}\nfunction cloneEventBrowser(e) {\n  return new e.constructor(e.type, e);\n}\nfunction cloneEventNode(e) {\n  if (\"data\" in e) {\n    const evt2 = new MessageEvent(e.type, e);\n    return evt2;\n  }\n  if (\"code\" in e || \"reason\" in e) {\n    const evt2 = new CloseEvent(\n      // @ts-expect-error we need to fix event/listener types\n      e.code || 1999,\n      // @ts-expect-error we need to fix event/listener types\n      e.reason || \"unknown reason\",\n      e\n    );\n    return evt2;\n  }\n  if (\"error\" in e) {\n    const evt2 = new ErrorEvent(e.error, e);\n    return evt2;\n  }\n  const evt = new Event(e.type, e);\n  return evt;\n}\nvar _a;\nvar isNode =\n  typeof process !== \"undefined\" &&\n  typeof ((_a = process.versions) == null ? void 0 : _a.node) !== \"undefined\" &&\n  typeof document === \"undefined\";\nvar cloneEvent = isNode ? cloneEventNode : cloneEventBrowser;\nvar DEFAULT = {\n  maxReconnectionDelay: 1e4,\n  minReconnectionDelay: 1e3 + Math.random() * 4e3,\n  minUptime: 5e3,\n  reconnectionDelayGrowFactor: 1.3,\n  connectionTimeout: 4e3,\n  maxRetries: Number.POSITIVE_INFINITY,\n  maxEnqueuedMessages: Number.POSITIVE_INFINITY,\n  startClosed: false,\n  debug: false\n};\nvar didWarnAboutMissingWebSocket = false;\nvar ReconnectingWebSocket = class _ReconnectingWebSocket extends EventTarget {\n  _ws;\n  _retryCount = -1;\n  _uptimeTimeout;\n  _connectTimeout;\n  _shouldReconnect = true;\n  _connectLock = false;\n  _binaryType = \"blob\";\n  _closeCalled = false;\n  _messageQueue = [];\n  _debugLogger = console.log.bind(console);\n  _url;\n  _protocols;\n  _options;\n  constructor(url, protocols, options = {}) {\n    super();\n    this._url = url;\n    this._protocols = protocols;\n    this._options = options;\n    if (this._options.startClosed) {\n      this._shouldReconnect = false;\n    }\n    if (this._options.debugLogger) {\n      this._debugLogger = this._options.debugLogger;\n    }\n    this._connect();\n  }\n  static get CONNECTING() {\n    return 0;\n  }\n  static get OPEN() {\n    return 1;\n  }\n  static get CLOSING() {\n    return 2;\n  }\n  static get CLOSED() {\n    return 3;\n  }\n  get CONNECTING() {\n    return _ReconnectingWebSocket.CONNECTING;\n  }\n  get OPEN() {\n    return _ReconnectingWebSocket.OPEN;\n  }\n  get CLOSING() {\n    return _ReconnectingWebSocket.CLOSING;\n  }\n  get CLOSED() {\n    return _ReconnectingWebSocket.CLOSED;\n  }\n  get binaryType() {\n    return this._ws ? this._ws.binaryType : this._binaryType;\n  }\n  set binaryType(value) {\n    this._binaryType = value;\n    if (this._ws) {\n      this._ws.binaryType = value;\n    }\n  }\n  /**\n   * Returns the number or connection retries\n   */\n  get retryCount() {\n    return Math.max(this._retryCount, 0);\n  }\n  /**\n   * The number of bytes of data that have been queued using calls to send() but not yet\n   * transmitted to the network. This value resets to zero once all queued data has been sent.\n   * This value does not reset to zero when the connection is closed; if you keep calling send(),\n   * this will continue to climb. Read only\n   */\n  get bufferedAmount() {\n    const bytes = this._messageQueue.reduce((acc, message) => {\n      if (typeof message === \"string\") {\n        acc += message.length;\n      } else if (message instanceof Blob) {\n        acc += message.size;\n      } else {\n        acc += message.byteLength;\n      }\n      return acc;\n    }, 0);\n    return bytes + (this._ws ? this._ws.bufferedAmount : 0);\n  }\n  /**\n   * The extensions selected by the server. This is currently only the empty string or a list of\n   * extensions as negotiated by the connection\n   */\n  get extensions() {\n    return this._ws ? this._ws.extensions : \"\";\n  }\n  /**\n   * A string indicating the name of the sub-protocol the server selected;\n   * this will be one of the strings specified in the protocols parameter when creating the\n   * WebSocket object\n   */\n  get protocol() {\n    return this._ws ? this._ws.protocol : \"\";\n  }\n  /**\n   * The current state of the connection; this is one of the Ready state constants\n   */\n  get readyState() {\n    if (this._ws) {\n      return this._ws.readyState;\n    }\n    return this._options.startClosed\n      ? _ReconnectingWebSocket.CLOSED\n      : _ReconnectingWebSocket.CONNECTING;\n  }\n  /**\n   * The URL as resolved by the constructor\n   */\n  get url() {\n    return this._ws ? this._ws.url : \"\";\n  }\n  /**\n   * Whether the websocket object is now in reconnectable state\n   */\n  get shouldReconnect() {\n    return this._shouldReconnect;\n  }\n  /**\n   * An event listener to be called when the WebSocket connection's readyState changes to CLOSED\n   */\n  onclose = null;\n  /**\n   * An event listener to be called when an error occurs\n   */\n  onerror = null;\n  /**\n   * An event listener to be called when a message is received from the server\n   */\n  onmessage = null;\n  /**\n   * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\n   * this indicates that the connection is ready to send and receive data\n   */\n  onopen = null;\n  /**\n   * Closes the WebSocket connection or connection attempt, if any. If the connection is already\n   * CLOSED, this method does nothing\n   */\n  close(code = 1e3, reason) {\n    this._closeCalled = true;\n    this._shouldReconnect = false;\n    this._clearTimeouts();\n    if (!this._ws) {\n      this._debug(\"close enqueued: no ws instance\");\n      return;\n    }\n    if (this._ws.readyState === this.CLOSED) {\n      this._debug(\"close: already closed\");\n      return;\n    }\n    this._ws.close(code, reason);\n  }\n  /**\n   * Closes the WebSocket connection or connection attempt and connects again.\n   * Resets retry counter;\n   */\n  reconnect(code, reason) {\n    this._shouldReconnect = true;\n    this._closeCalled = false;\n    this._retryCount = -1;\n    if (!this._ws || this._ws.readyState === this.CLOSED) {\n      this._connect();\n    } else {\n      this._disconnect(code, reason);\n      this._connect();\n    }\n  }\n  /**\n   * Enqueue specified data to be transmitted to the server over the WebSocket connection\n   */\n  send(data) {\n    if (this._ws && this._ws.readyState === this.OPEN) {\n      this._debug(\"send\", data);\n      this._ws.send(data);\n    } else {\n      const { maxEnqueuedMessages = DEFAULT.maxEnqueuedMessages } =\n        this._options;\n      if (this._messageQueue.length < maxEnqueuedMessages) {\n        this._debug(\"enqueue\", data);\n        this._messageQueue.push(data);\n      }\n    }\n  }\n  _debug(...args) {\n    if (this._options.debug) {\n      this._debugLogger(\"RWS>\", ...args);\n    }\n  }\n  _getNextDelay() {\n    const {\n      reconnectionDelayGrowFactor = DEFAULT.reconnectionDelayGrowFactor,\n      minReconnectionDelay = DEFAULT.minReconnectionDelay,\n      maxReconnectionDelay = DEFAULT.maxReconnectionDelay\n    } = this._options;\n    let delay = 0;\n    if (this._retryCount > 0) {\n      delay =\n        minReconnectionDelay *\n        reconnectionDelayGrowFactor ** (this._retryCount - 1);\n      if (delay > maxReconnectionDelay) {\n        delay = maxReconnectionDelay;\n      }\n    }\n    this._debug(\"next delay\", delay);\n    return delay;\n  }\n  _wait() {\n    return new Promise((resolve) => {\n      setTimeout(resolve, this._getNextDelay());\n    });\n  }\n  _getNextProtocols(protocolsProvider) {\n    if (!protocolsProvider) return Promise.resolve(null);\n    if (\n      typeof protocolsProvider === \"string\" ||\n      Array.isArray(protocolsProvider)\n    ) {\n      return Promise.resolve(protocolsProvider);\n    }\n    if (typeof protocolsProvider === \"function\") {\n      const protocols = protocolsProvider();\n      if (!protocols) return Promise.resolve(null);\n      if (typeof protocols === \"string\" || Array.isArray(protocols)) {\n        return Promise.resolve(protocols);\n      }\n      if (protocols.then) {\n        return protocols;\n      }\n    }\n    throw Error(\"Invalid protocols\");\n  }\n  _getNextUrl(urlProvider) {\n    if (typeof urlProvider === \"string\") {\n      return Promise.resolve(urlProvider);\n    }\n    if (typeof urlProvider === \"function\") {\n      const url = urlProvider();\n      if (typeof url === \"string\") {\n        return Promise.resolve(url);\n      }\n      if (url.then) {\n        return url;\n      }\n    }\n    throw Error(\"Invalid URL\");\n  }\n  _connect() {\n    if (this._connectLock || !this._shouldReconnect) {\n      return;\n    }\n    this._connectLock = true;\n    const {\n      maxRetries = DEFAULT.maxRetries,\n      connectionTimeout = DEFAULT.connectionTimeout\n    } = this._options;\n    if (this._retryCount >= maxRetries) {\n      this._debug(\"max retries reached\", this._retryCount, \">=\", maxRetries);\n      return;\n    }\n    this._retryCount++;\n    this._debug(\"connect\", this._retryCount);\n    this._removeListeners();\n    this._wait()\n      .then(() =>\n        Promise.all([\n          this._getNextUrl(this._url),\n          this._getNextProtocols(this._protocols || null)\n        ])\n      )\n      .then(([url, protocols]) => {\n        if (this._closeCalled) {\n          this._connectLock = false;\n          return;\n        }\n        if (\n          !this._options.WebSocket &&\n          typeof WebSocket === \"undefined\" &&\n          !didWarnAboutMissingWebSocket\n        ) {\n          console.error(`\\u203C\\uFE0F No WebSocket implementation available. You should define options.WebSocket. \n\nFor example, if you're using node.js, run \\`npm install ws\\`, and then in your code:\n\nimport PartySocket from 'partysocket';\nimport WS from 'ws';\n\nconst partysocket = new PartySocket({\n  host: \"127.0.0.1:1999\",\n  room: \"test-room\",\n  WebSocket: WS\n});\n\n`);\n          didWarnAboutMissingWebSocket = true;\n        }\n        const WS = this._options.WebSocket || WebSocket;\n        this._debug(\"connect\", { url, protocols });\n        this._ws = protocols ? new WS(url, protocols) : new WS(url);\n        this._ws.binaryType = this._binaryType;\n        this._connectLock = false;\n        this._addListeners();\n        this._connectTimeout = setTimeout(\n          () => this._handleTimeout(),\n          connectionTimeout\n        );\n      })\n      .catch((err) => {\n        this._connectLock = false;\n        this._handleError(new Events.ErrorEvent(Error(err.message), this));\n      });\n  }\n  _handleTimeout() {\n    this._debug(\"timeout event\");\n    this._handleError(new Events.ErrorEvent(Error(\"TIMEOUT\"), this));\n  }\n  _disconnect(code = 1e3, reason) {\n    this._clearTimeouts();\n    if (!this._ws) {\n      return;\n    }\n    this._removeListeners();\n    try {\n      if (\n        this._ws.readyState === this.OPEN ||\n        this._ws.readyState === this.CONNECTING\n      ) {\n        this._ws.close(code, reason);\n      }\n      this._handleClose(new Events.CloseEvent(code, reason, this));\n    } catch (error) {}\n  }\n  _acceptOpen() {\n    this._debug(\"accept open\");\n    this._retryCount = 0;\n  }\n  _handleOpen = (event) => {\n    this._debug(\"open event\");\n    const { minUptime = DEFAULT.minUptime } = this._options;\n    clearTimeout(this._connectTimeout);\n    this._uptimeTimeout = setTimeout(() => this._acceptOpen(), minUptime);\n    assert(this._ws, \"WebSocket is not defined\");\n    this._ws.binaryType = this._binaryType;\n    this._messageQueue.forEach((message) => {\n      var _a2;\n      return (_a2 = this._ws) == null ? void 0 : _a2.send(message);\n    });\n    this._messageQueue = [];\n    if (this.onopen) {\n      this.onopen(event);\n    }\n    this.dispatchEvent(cloneEvent(event));\n  };\n  _handleMessage = (event) => {\n    this._debug(\"message event\");\n    if (this.onmessage) {\n      this.onmessage(event);\n    }\n    this.dispatchEvent(cloneEvent(event));\n  };\n  _handleError = (event) => {\n    this._debug(\"error event\", event.message);\n    this._disconnect(void 0, event.message === \"TIMEOUT\" ? \"timeout\" : void 0);\n    if (this.onerror) {\n      this.onerror(event);\n    }\n    this._debug(\"exec error listeners\");\n    this.dispatchEvent(cloneEvent(event));\n    this._connect();\n  };\n  _handleClose = (event) => {\n    this._debug(\"close event\");\n    this._clearTimeouts();\n    if (this._shouldReconnect) {\n      this._connect();\n    }\n    if (this.onclose) {\n      this.onclose(event);\n    }\n    this.dispatchEvent(cloneEvent(event));\n  };\n  _removeListeners() {\n    if (!this._ws) {\n      return;\n    }\n    this._debug(\"removeListeners\");\n    this._ws.removeEventListener(\"open\", this._handleOpen);\n    this._ws.removeEventListener(\"close\", this._handleClose);\n    this._ws.removeEventListener(\"message\", this._handleMessage);\n    this._ws.removeEventListener(\"error\", this._handleError);\n  }\n  _addListeners() {\n    if (!this._ws) {\n      return;\n    }\n    this._debug(\"addListeners\");\n    this._ws.addEventListener(\"open\", this._handleOpen);\n    this._ws.addEventListener(\"close\", this._handleClose);\n    this._ws.addEventListener(\"message\", this._handleMessage);\n    this._ws.addEventListener(\"error\", this._handleError);\n  }\n  _clearTimeouts() {\n    clearTimeout(this._connectTimeout);\n    clearTimeout(this._uptimeTimeout);\n  }\n};\n\nexport { ErrorEvent, CloseEvent, ReconnectingWebSocket };\n/*!\n * Reconnecting WebSocket\n * by Pedro Ladaria <pedro.ladaria@gmail.com>\n * https://github.com/pladaria/reconnecting-websocket\n * License MIT\n */\n//# sourceMappingURL=chunk-ZCZZNAX5.mjs.map\n","import { ReconnectingWebSocket } from \"./chunk-ZCZZNAX5.mjs\";\n\n// src/index.ts\nvar valueIsNotNil = (keyValuePair) =>\n  keyValuePair[1] !== null && keyValuePair[1] !== void 0;\nfunction generateUUID() {\n  if (typeof crypto !== \"undefined\" && crypto.randomUUID) {\n    return crypto.randomUUID();\n  }\n  let d = /* @__PURE__ */ new Date().getTime();\n  let d2 =\n    (typeof performance !== \"undefined\" &&\n      performance.now &&\n      performance.now() * 1e3) ||\n    0;\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16;\n    if (d > 0) {\n      r = (d + r) % 16 | 0;\n      d = Math.floor(d / 16);\n    } else {\n      r = (d2 + r) % 16 | 0;\n      d2 = Math.floor(d2 / 16);\n    }\n    return (c === \"x\" ? r : (r & 3) | 8).toString(16);\n  });\n}\nfunction getPartyInfo(partySocketOptions, defaultProtocol, defaultParams = {}) {\n  const {\n    host: rawHost,\n    path: rawPath,\n    protocol: rawProtocol,\n    room,\n    party,\n    basePath,\n    prefix,\n    query\n  } = partySocketOptions;\n  let host = rawHost.replace(/^(http|https|ws|wss):\\/\\//, \"\");\n  if (host.endsWith(\"/\")) {\n    host = host.slice(0, -1);\n  }\n  if (rawPath == null ? void 0 : rawPath.startsWith(\"/\")) {\n    throw new Error(\"path must not start with a slash\");\n  }\n  const name = party ?? \"main\";\n  const path = rawPath ? `/${rawPath}` : \"\";\n  const protocol =\n    rawProtocol ||\n    (host.startsWith(\"localhost:\") ||\n    host.startsWith(\"127.0.0.1:\") ||\n    host.startsWith(\"192.168.\") ||\n    host.startsWith(\"10.\") ||\n    (host.startsWith(\"172.\") &&\n      host.split(\".\")[1] >= \"16\" &&\n      host.split(\".\")[1] <= \"31\") ||\n    host.startsWith(\"[::ffff:7f00:1]:\")\n      ? // http / ws\n        defaultProtocol\n      : // https / wss\n        `${defaultProtocol}s`);\n  const baseUrl = `${protocol}://${host}/${basePath || `${prefix || \"parties\"}/${name}/${room}`}${path}`;\n  const makeUrl = (query2 = {}) =>\n    `${baseUrl}?${new URLSearchParams([\n      ...Object.entries(defaultParams),\n      ...Object.entries(query2).filter(valueIsNotNil)\n    ])}`;\n  const urlProvider =\n    typeof query === \"function\"\n      ? async () => makeUrl(await query())\n      : makeUrl(query);\n  return {\n    host,\n    path,\n    room,\n    name,\n    protocol,\n    partyUrl: baseUrl,\n    urlProvider\n  };\n}\nvar PartySocket = class extends ReconnectingWebSocket {\n  constructor(partySocketOptions) {\n    var _a, _b;\n    const wsOptions = getWSOptions(partySocketOptions);\n    super(wsOptions.urlProvider, wsOptions.protocols, wsOptions.socketOptions);\n    this.partySocketOptions = partySocketOptions;\n    this.setWSProperties(wsOptions);\n    if (!partySocketOptions.disableNameValidation) {\n      if ((_a = partySocketOptions.party) == null ? void 0 : _a.includes(\"/\")) {\n        console.warn(\n          `PartySocket: party name \"${partySocketOptions.party}\" contains forward slash which may cause routing issues. Consider using a name without forward slashes or set disableNameValidation: true to bypass this warning.`\n        );\n      }\n      if ((_b = partySocketOptions.room) == null ? void 0 : _b.includes(\"/\")) {\n        console.warn(\n          `PartySocket: room name \"${partySocketOptions.room}\" contains forward slash which may cause routing issues. Consider using a name without forward slashes or set disableNameValidation: true to bypass this warning.`\n        );\n      }\n    }\n  }\n  _pk;\n  _pkurl;\n  name;\n  room;\n  host;\n  path;\n  updateProperties(partySocketOptions) {\n    const wsOptions = getWSOptions({\n      ...this.partySocketOptions,\n      ...partySocketOptions,\n      host: partySocketOptions.host ?? this.host,\n      room: partySocketOptions.room ?? this.room,\n      path: partySocketOptions.path ?? this.path\n    });\n    this._url = wsOptions.urlProvider;\n    this._protocols = wsOptions.protocols;\n    this._options = wsOptions.socketOptions;\n    this.setWSProperties(wsOptions);\n  }\n  setWSProperties(wsOptions) {\n    const { _pk, _pkurl, name, room, host, path } = wsOptions;\n    this._pk = _pk;\n    this._pkurl = _pkurl;\n    this.name = name;\n    this.room = room;\n    this.host = host;\n    this.path = path;\n  }\n  reconnect(code, reason) {\n    if (!this.room || !this.host) {\n      throw new Error(\n        \"The room and host must be set before connecting, use `updateProperties` method to set them or pass them to the constructor.\"\n      );\n    }\n    super.reconnect(code, reason);\n  }\n  get id() {\n    return this._pk;\n  }\n  /**\n   * Exposes the static PartyKit room URL without applying query parameters.\n   * To access the currently connected WebSocket url, use PartySocket#url.\n   */\n  get roomUrl() {\n    return this._pkurl;\n  }\n  // a `fetch` method that uses (almost) the same options as `PartySocket`\n  static async fetch(options, init) {\n    const party = getPartyInfo(options, \"http\");\n    const url =\n      typeof party.urlProvider === \"string\"\n        ? party.urlProvider\n        : await party.urlProvider();\n    const doFetch = options.fetch ?? fetch;\n    return doFetch(url, init);\n  }\n};\nfunction getWSOptions(partySocketOptions) {\n  const {\n    id,\n    host: _host,\n    path: _path,\n    party: _party,\n    room: _room,\n    protocol: _protocol,\n    query: _query,\n    protocols,\n    ...socketOptions\n  } = partySocketOptions;\n  const _pk = id || generateUUID();\n  const party = getPartyInfo(partySocketOptions, \"ws\", { _pk });\n  return {\n    _pk,\n    _pkurl: party.partyUrl,\n    name: party.name,\n    room: party.room,\n    host: party.host,\n    path: party.path,\n    protocols,\n    socketOptions,\n    urlProvider: party.urlProvider\n  };\n}\n\nexport { PartySocket };\n//# sourceMappingURL=chunk-NLWAO4PP.mjs.map\n"],"names":["ErrorEvent","error","target","__publicField","CloseEvent","code","reason","Events","assert","condition","msg","cloneEventBrowser","e","cloneEventNode","_a","isNode","cloneEvent","DEFAULT","didWarnAboutMissingWebSocket","ReconnectingWebSocket","_ReconnectingWebSocket","url","protocols","options","event","minUptime","message","_a2","value","acc","data","maxEnqueuedMessages","args","reconnectionDelayGrowFactor","minReconnectionDelay","maxReconnectionDelay","delay","resolve","protocolsProvider","urlProvider","maxRetries","connectionTimeout","WS","err","valueIsNotNil","keyValuePair","generateUUID","d","d2","c","r","getPartyInfo","partySocketOptions","defaultProtocol","defaultParams","rawHost","rawPath","rawProtocol","room","party","basePath","prefix","query","host","name","path","protocol","baseUrl","makeUrl","query2","PartySocket","_b","wsOptions","getWSOptions","_pk","_pkurl","init","id","_host","_path","_party","_room","_protocol","_query","socketOptions"],"mappings":"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","x_google_ignoreList":[0,1]}